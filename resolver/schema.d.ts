/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/identifiers/{identifier}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Resolve a DID / Dereference a DID URL
         * @description <p>This endpoint either resolves a DID, or dereferences a DID URL. When resolving a DID, it takes the DID and resolution options as inputs, and the output is a DID document plus metadata. When dereferencing a DID URL, it takes the DID URL and dereferencing options as inputs, and the output is a DID document, a part of a DID document, or some other resource identified by the DID URL.</p> <p>See the <a href="<a href="https://www.w3.org/TR/did-resolution/">DID Resolution</a> specification for additional details.</p>
         */
        get: operations["resolve"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/properties": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Return a map of configuration properties
         * @description <p>This endpoint returns a map of the configuration properties of the DID Resolver, including of its drivers.</p>
         */
        get: operations["universalResolverGetProperties"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/methods": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Return a list of supported DID methods
         * @description <p>This endpoint returns a list of DID methods supported by the DID Resolver.</p>
         */
        get: operations["universalResolverGetMethods"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/testIdentifiers": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Return a map of test identifiers
         * @description <p>This endpoint returns a map of test identifiers, grouped by DID method.</p>
         */
        get: operations["universalResolverGetTestIdentifiers"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/traits": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Return a map of DID traits
         * @description <p>This endpoint returns a map of the DID traits of the DID methods supported by the DID Resolver.</p>
         */
        get: operations["universalResolverGetTraits"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** @description The DID resolution options. See https://www.w3.org/TR/did-resolution/#did-resolution-options */
        ResolutionOptions: {
            expandRelativeUrls?: boolean;
            versionId?: string;
            /** Format: date-time */
            versionTime?: string;
        } & {
            [key: string]: unknown;
        };
        /** @description The DID URL dereferencing options. See https://www.w3.org/TR/did-resolution/#did-url-dereferencing-options */
        DereferencingOptions: {
            verificationRelationship?: string;
        } & {
            [key: string]: unknown;
        };
        /** @description The DID resolution result. */
        ResolutionResult: {
            didDocument?: Record<string, never>;
            didResolutionMetadata?: components["schemas"]["DidResolutionMetadata"];
            didDocumentMetadata?: components["schemas"]["DidDocumentMetadata"];
        };
        DidResolutionMetadata: {
            contentType?: string;
            error?: components["schemas"]["RFC9457ProblemDetails"];
        } & {
            [key: string]: unknown;
        };
        DidDocumentMetadata: {
            /** Format: date-time */
            created?: string;
            /** Format: date-time */
            updated?: string;
            deactivated?: string;
            /** Format: date-time */
            nextUpdate?: string;
            versionId?: string;
            nextVersionId?: string;
            equivalentId?: string[];
            canonicalId?: string;
        } & {
            [key: string]: unknown;
        };
        /** @description The DID URL dereferencing result. */
        DereferencingResult: {
            content?: Record<string, never>;
            dereferencingMetadata?: components["schemas"]["DereferencingMetadata"];
            contentMetadata?: components["schemas"]["ContentMetadata"];
        };
        DereferencingMetadata: {
            contentType?: string;
            error?: components["schemas"]["RFC9457ProblemDetails"];
        } & {
            [key: string]: unknown;
        };
        ContentMetadata: {
            [key: string]: unknown;
        };
        RFC9457ProblemDetails: {
            type: string;
            status?: number;
            title: string;
            detail?: string;
            instance?: string;
        } & {
            [key: string]: unknown;
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    resolve: {
        parameters: {
            query?: {
                /** @description The options for resolving the DID or dereferencing the DID URL. */
                options?: components["schemas"]["ResolutionOptions"] | components["schemas"]["DereferencingOptions"];
            };
            header?: {
                /** @description The requested media type of the DID document representation or DID resolution result. */
                Accept?: string;
            };
            path: {
                /** @description The DID to be resolved, or the DID URL to be dereferenced. */
                identifier: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description successfully resolved! */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/did": Record<string, never>;
                    "application/did-resolution": components["schemas"]["ResolutionResult"];
                    "application/did-url-dereferencing": components["schemas"]["DereferencingResult"];
                };
            };
            /** @description Invalid DID or DID URL. */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description DID or DID URL not found. */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Representation not supported. */
            406: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description Successfully resolved, but DID is deactivated. */
            410: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/did": Record<string, never>;
                    "application/did-resolution": components["schemas"]["ResolutionResult"];
                    "application/did-url-dereferencing": components["schemas"]["DereferencingResult"];
                };
            };
            /** @description Internal Error. */
            500: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
            /** @description DID method not supported. */
            501: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    universalResolverGetProperties: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/did+json": Record<string, never>;
                };
            };
        };
    };
    universalResolverGetMethods: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/did+json": string[];
                };
            };
        };
    };
    universalResolverGetTestIdentifiers: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/did+json": Record<string, never>;
                };
            };
        };
    };
    universalResolverGetTraits: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Success. */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/did+json": Record<string, never>;
                };
            };
        };
    };
}
